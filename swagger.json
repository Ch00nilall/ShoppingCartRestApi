{
  "swagger": "2.0",
  "info": {
    "description": "This is an API to manage a shopping cart for a user for an online store",
    "version": "1.0.6",
    "title": "Shopping Cart Rest Api",
    "termsOfService": "http://swagger.io/terms/",
    "contact": { "email": "apiteam@swagger.io" },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  //"host": "shoppingCart.swagger.io",
  "host": "ch00nilall.github.io/ShoppingCartRestApi",
  "basePath": "/v1",
  "tags": [
    {
      "name": "Shopping Cart",
      "description": "Everything about your Shopping cart",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "store",
      "description": "Access to Cart orders"
    } 
  ],
  "schemes": [ "https", "http" ],
  "paths": {
    "/cart/{itemId}/uploadImage": {
      "post": {
        "tags": [ "cart" ],
        "summary": "uploads an image",
        "description": "",
        "operationId": "uploadFile",
        "consumes": [ "multipart/form-data" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "itemId",
            "in": "path",
            "description": "ID of item to update",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "additionalMetadata",
            "in": "formData",
            "description": "Additional data to pass to server",
            "required": false,
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "description": "file to upload",
            "required": false,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/ApiResponse" }
          }
        },
        "security": [ { "shoppingCart_auth": [ "write:cart", "read:cart" ] } ]
      }
    },
    "/Cart": {
      "post": {
        "tags": [ "cart" ],
        "summary": "Add a item to the store",
        "description": "",
        "operationId": "CreateCartItem",
        "consumes": [ "application/json", "application/xml" ],
        "produces": [ "application/json", "application/xml" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Item object that needs to be added to the store",
            "required": true,
            "schema": { "$ref": "#/definitions/Cart" }
          }
        ],
        "responses": { "405": { "description": "Invalid input" } },
        "security": [ { "shoppingCart_auth": [ "write:cart", "read:cart" ] } ]
      },
      "put": {
        "tags": [ "cart" ],
        "summary": "Update an existing cart",
        "description": "",
        "operationId": "updateitem",
        "consumes": [ "application/json", "application/xml" ],
        "produces": [ "application/json", "application/xml" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "item object that needs to be added to the store",
            "required": true,
            "schema": { "$ref": "#/definitions/item" }
          }
        ],
        "responses": {
          "400": { "description": "Invalid ID supplied" },
          "404": { "description": "item not found" },
          "405": { "description": "Validation exception" }
        },
        "security": [ { "shoppingCart_auth": [ "write:items", "read:items" ] } ]
      }
    },
     
    "/login": {
      "get": {
        "tags": [ "user" ],
        "summary": "Logs user into the system",
        "description": "",
        "operationId": "Login",
        "produces": [ "application/json", "application/xml" ],
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The user name for login",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "type": "string" }
          },
          "400": { "description": "Invalid username/password supplied" }
        }
      }
    },
    "/login/logout": {
      "get": {
        "tags": [ "user" ],
        "summary": "Logs out current logged in user session",
        "description": "",
        "operationId": "Logout",
        "produces": [ "application/json", "application/xml" ],
        "parameters": [],
        "responses": { "default": { "description": "successful operation" } }
      }
    },
    "/login/signin-google": {
      "post": {
        "tags": [ "user" ],
        "summary": "sign in user",
        "description": "This can only be done by the logged in user.",
        "operationId": "createUser",
        "consumes": [ "application/json" ],
        "produces": [ "application/json", "application/xml" ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": { "$ref": "#/definitions/User" }
          }
        ],
        "responses": { "default": { "description": "successful operation" } }
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    },
    "shoppingCart_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://shoppingCart.swagger.io/oauth/authorize",
      "flow": "implicit",
      "scopes": {
        "read:items": "read your items",
        "write:items": "modify items in your account"
      }
    }
  },
  "definitions": {
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "type": { "type": "string" },
        "message": { "type": "string" }
      }
    },
    "Category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": { "type": "string" }
      },
      "xml": { "name": "Category" }
    },
    "item": {
      "type": "object",
      "required": [ "name", "photoUrls" ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "category": { "$ref": "#/definitions/Category" },
        "name": {
          "type": "string",
          "example": "doggie"
        },
        "photoUrls": {
          "type": "array",
          "xml": { "wrapped": true },
          "items": {
            "type": "string",
            "xml": { "name": "photoUrl" }
          }
        },
        "tags": {
          "type": "array",
          "xml": { "wrapped": true },
          "items": {
            "xml": { "name": "tag" },
            "$ref": "#/definitions/Tag"
          }
        },
        "status": {
          "type": "string",
          "description": "item status in the store",
          "enum": [ "available", "pending", "sold" ]
        }
      },
      "xml": { "name": "item" }
    },
    "Tag": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": { "type": "string" }
      },
      "xml": { "name": "Tag" }
    },
    "Order": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "itemId": {
          "type": "integer",
          "format": "int64"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "shipDate": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "Order Status",
          "enum": [ "placed", "approved", "delivered" ]
        },
        "complete": { "type": "boolean" }
      },
      "xml": { "name": "Order" }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "username": { "type": "string" },
        "firstName": { "type": "string" },
        "lastName": { "type": "string" },
        "email": { "type": "string" },
        "password": { "type": "string" },
        "phone": { "type": "string" },
        "userStatus": {
          "type": "integer",
          "format": "int32",
          "description": "User Status"
        }
      },
      "xml": { "name": "User" }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}